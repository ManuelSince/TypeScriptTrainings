{"version":3,"file":"project.esm.js","sources":["../src/models/Entreprise.ts","../src/models/Employee.ts","../src/index.ts"],"sourcesContent":["import { IObservable } from '../interfaces/IObserverPattern';\r\nimport { Employee } from './Employee'\r\n\r\nexport class Entreprise implements IObservable{\r\n    private name: string;\r\n    private employees: Employee[] = [];\r\n    private earnings: number;\r\n    constructor (name: string, employees: Employee[], earnings: number) {\r\n        this.name = name;\r\n        this.employees = employees;\r\n        this.notify();\r\n        this.earnings = earnings;\r\n    }\r\n    public getName (): string { return this.name}\r\n    public getEmployees (): Employee[] { return this.employees }\r\n    public getEarnings (): number { return this.earnings }\r\n    public setName (name: string): void { this.name = name }\r\n    public setEmployees (employees: Employee[]): void { this.employees = employees}\r\n    public setEarnings (earnings: number): void { this.earnings = earnings }\r\n    public greet () { console.log(`The ${this.name} has ${this.employees.length} employees and earn ${this.earnings}`)};\r\n    public addEmployee (employee: Employee) {\r\n        this.employees.push(employee);\r\n        this.notify();\r\n    }\r\n    public removingEmployee (employee: Employee) {\r\n        const index = this.employees.findIndex(employee_in => employee_in.getLastname() === employee.getLastname() && employee_in.getFirstname() === employee.getFirstname());\r\n        console.log(`firing employee ${employee.getFirstname()} ${employee.getLastname()}`);\r\n        this.employees.splice(index, 1);\r\n        this.notify();\r\n    }\r\n    public attach (employee: Employee) { this.employees.push(employee)}\r\n    public detach (employee: Employee) {\r\n        const index = this.employees.findIndex(employee_in => employee_in.getLastname() === employee.getLastname() && employee_in.getFirstname() === employee.getFirstname());\r\n        this.employees.splice(index, 1);\r\n    }\r\n    public notify (): void {   \r\n        for (const employee of this.employees) {\r\n            console.log(`Subject : Notifying observer ${employee.getFirstname()} ${employee.getLastname()} ...`);\r\n            employee.update();\r\n        }\r\n    }\r\n\r\n}","import { IObserver } from '../interfaces/IObserverPattern'\r\nimport { Entreprise } from './Entreprise'\r\nexport class Person {\r\n    protected firstname: string;\r\n    protected lastname: string;\r\n    constructor(firstname: string, lastname: string ) {\r\n        this.firstname = firstname;\r\n        this.lastname = lastname;\r\n    }\r\n    getFirstname (): string { return this.firstname };\r\n    getLastname (): string { return this.lastname};\r\n    setFirstname (firstname: string): void { this.firstname = firstname };\r\n    setLastname (lastname: string): void { this.lastname = lastname};\r\n    greet () { console.log(`hello i am ${this.firstname} ${this.lastname}`)}\r\n}\r\nexport class Employee extends Person implements IObserver{\r\n    private entreprise: Entreprise\r\n    private job: string;\r\n    private wage: number;\r\n    constructor(entreprise: Entreprise, firstname: string, lastname: string, job: string, wage: number ) {\r\n        super(firstname, lastname);\r\n        this.entreprise = entreprise;\r\n        this.job = job;\r\n        this.wage = wage;\r\n    }\r\n    getJob (): string { return this.job };\r\n    getWage (): number { return this.wage };\r\n    getEntreprise (): Entreprise { return this.entreprise };\r\n    setFirstname (firstname: string): void { this.firstname = firstname };\r\n    setLastname (lastname: string): void { this.lastname = lastname};\r\n    greet () { super.greet(); console.log(`i work as ${this.job} with a wage of ${this.wage}`)}\r\n    update () { console.log(`company employees are growing ... ${this.entreprise.getEmployees().length}`) }\r\n}","// import {Worker} from './models/Person';\nimport { Entreprise } from './models/Entreprise';\nimport { Employee } from './models/Employee'\n\n// export const sum = (a: number, b: number) => {\n//   if ('development' === process.env.NODE_ENV) {\n//     console.log('boop');\n//   }\n//   return a + b;\n// };\n\n//Observer Pattern implementation using Entreprise (observable) and employees as observers :\n\nconst colaCompany: Entreprise = new Entreprise(\"coca cola company\", [], 248900);\n// const employees: Employee[] = [];\nconst trump = new Employee(colaCompany, \"Donald\", \"Trump\", \"CEO\", 25000);\ntrump.greet();\ncolaCompany.addEmployee(trump);\nconst hillary = new Employee(colaCompany, \"hillary\", \"Clinton\", \"vice-presidente\", 21000);\nhillary.greet();\ncolaCompany.addEmployee(hillary);\nconst fabieng = new Employee(colaCompany, \"fabieng\", \"shit\", \"trainee\", 500);\nfabieng.greet();\ncolaCompany.addEmployee(fabieng);\ncolaCompany.removingEmployee(hillary)\n\n// Pattern to set attribute using a single method taking a unique object parameter \n// let louis = new Worker('Since', 'louis', 18, 'General Electric','Advanced Visualization', 'engineer', 2765);\n// let payload = {salary: 3485, firstname: 'Manuel'};\n// louis.updateFields(payload)\n// console.log(louis.describe());\n\n"],"names":["Entreprise","name","employees","earnings","notify","getName","getEmployees","getEarnings","setName","setEmployees","setEarnings","greet","console","log","length","addEmployee","employee","push","removingEmployee","index","findIndex","employee_in","getLastname","getFirstname","splice","attach","detach","update","Person","firstname","lastname","setFirstname","setLastname","Employee","entreprise","job","wage","getJob","getWage","getEntreprise","colaCompany","trump","hillary","fabieng"],"mappings":"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"}